PROJECT_ID=gcping-1369
SITE=www.gcping.com

# Create buckets in each region/multiregion
regions="us-central1 us-east1 us-west1 europe-west1 asia-east1 asia-northeast1"
for r in $regions; do
  gsutil mb -c regional -l $r gs://$PROJECT-$r
done

# Set defacl public-read on buckets
gsutil ls -p $PROJECT_ID | xargs gsutil defacl set public-read

# Set CORS on buckets
gsutil ls -p $PROJECT_ID | xargs gsutil cors set cors.json

# Copy ping object to buckets, with no-cache headers
echo "pong" > ping
gsutil ls -p $PROJECT_ID | xargs -I{} gsutil -h "Cache-Control:no-store" cp ping {}
rm ping


# Set up static site
gsutil mb gs://$SITE
gsutil defacl set public-read gs://$SITE
gsutil cp index.html gs://$SITE
gsutil web set -m index.html gs://$SITE




## Set up GCE instances
regions="us-central1 us-east1 us-west1 europe-west1 asia-east1 asia-northeast1"

# Create static addresses
for r in $regions; do
gcloud compute --project=$PROJECT_ID addresses create "$r" --region=$r
done

# Create VMs
for r in $regions; do
gcloud compute --project=$PROJECT_ID instances delete "$r" --zone="$r-b" || true
addr=$(gcloud compute --project=$PROJECT_ID addresses describe "$r" --region=$r | grep "address:" | cut -d' ' -f2)
echo $r $addr
gcloud compute --project=$PROJECT_ID instances create "$r" \
  --zone "$r-b" \
  --machine-type=f1-micro \
  --metadata-from-file startup-script=startupscript.sh \
  --subnet=default \
  --address=$addr \
  --tags=http-server \
  --maintenance-policy=MIGRATE \
  --image="/ubuntu-os-cloud/ubuntu-1604-xenial-v20161130" \
  --boot-disk-size=10 \
  --boot-disk-type=pd-standard \
  --boot-disk-device-name="$r" \
  --no-scopes
done
